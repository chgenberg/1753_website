import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

interface SubscriptionPlanData {
  name: string
  description: string
  price: number
  interval: 'monthly' | 'quarterly' | 'yearly'
  intervalCount: number
  trialDays: number
  features: string[]
}

const subscriptionPlans: SubscriptionPlanData[] = [
  {
    name: 'M√•nadsbox - Uppt√§ck',
    description: 'Perfekt f√∂r dig som vill testa olika produkter och uppt√§cka vad som fungerar b√§st f√∂r din hud.',
    price: 399,
    interval: 'monthly',
    intervalCount: 1,
    trialDays: 14,
    features: [
      '1-2 produkter per m√•nad',
      'V√§rde upp till 600 kr per box',
      'Personligt anpassat inneh√•ll',
      'Gratis frakt',
      '14 dagars gratis provperiod',
      'Avsluta n√§r du vill',
      'Exklusiva produkter f√∂rst',
      'Hudv√•rdsguide och tips'
    ]
  },
  {
    name: 'M√•nadsbox - Komplett',
    description: 'F√∂r dig som vill ha en fullst√§ndig hudv√•rdsrutin levererad hem varje m√•nad.',
    price: 649,
    interval: 'monthly',
    intervalCount: 1,
    trialDays: 14,
    features: [
      '2-3 produkter per m√•nad',
      'V√§rde upp till 900 kr per box',
      'Komplett hudv√•rdsrutin',
      'Personligt anpassat inneh√•ll',
      'Gratis frakt',
      '14 dagars gratis provperiod',
      'Avsluta n√§r du vill',
      'Exklusiva produkter f√∂rst',
      'Detaljerad hudv√•rdsguide',
      'Prioriterad kundservice'
    ]
  },
  {
    name: 'Kvartalsbox - Premium',
    description: 'F√• en st√∂rre leverans var tredje m√•nad med v√•ra b√§sta produkter och exklusiva nyheter.',
    price: 1499,
    interval: 'quarterly',
    intervalCount: 1,
    trialDays: 14,
    features: [
      '4-6 produkter per leverans',
      'V√§rde upp till 2500 kr per box',
      'Exklusiva limited edition produkter',
      'Personligt anpassat inneh√•ll',
      'Gratis frakt',
      '14 dagars gratis provperiod',
      'Avsluta n√§r du vill',
      'F√∂rsta att testa nya produkter',
      'Personlig hudkonsultation (video)',
      'Exklusiva rabatter p√• fullstora produkter',
      'Prioriterad kundservice'
    ]
  },
  {
    name: '√Örsbox - VIP',
    description: 'V√•r mest exklusiva prenumeration med √•rlig leverans och VIP-f√∂rm√•ner.',
    price: 4999,
    interval: 'yearly',
    intervalCount: 1,
    trialDays: 30,
    features: [
      '12-15 produkter per √•r',
      'V√§rde upp till 8000 kr',
      'Alla nya produkter inkluderade',
      'Exklusiva limited edition produkter',
      'Personligt anpassat inneh√•ll',
      'Gratis frakt hela √•ret',
      '30 dagars gratis provperiod',
      'Avsluta n√§r du vill',
      'Personlig hudkonsultation (video, 2 ggr/√•r)',
      '25% rabatt p√• alla extra k√∂p',
      'VIP kundservice',
      'Inbjudningar till exklusiva events',
      'Tidig tillg√•ng till kampanjer'
    ]
  }
]

async function setupSubscriptionPlans() {
  try {
    console.log('üîÑ Setting up subscription plans...\n')

    // First, deactivate all existing plans
    await prisma.subscriptionPlan.updateMany({
      data: { isActive: false }
    })
    console.log('üìù Deactivated existing plans')

    // Create new plans
    for (const planData of subscriptionPlans) {
      const plan = await prisma.subscriptionPlan.create({
        data: {
          name: planData.name,
          description: planData.description,
          price: planData.price,
          currency: 'SEK',
          interval: planData.interval,
          intervalCount: planData.intervalCount,
          trialDays: planData.trialDays,
          features: planData.features,
          isActive: true
        }
      })

      console.log(`‚úÖ Created: ${plan.name} - ${plan.price} kr/${plan.interval}`)
      console.log(`   Features: ${planData.features.length} features`)
      console.log(`   Trial: ${plan.trialDays} days\n`)
    }

    // Show all active plans
    const activePlans = await prisma.subscriptionPlan.findMany({
      where: { isActive: true },
      orderBy: { price: 'asc' }
    })

    console.log('üì¶ Active subscription plans:')
    activePlans.forEach(plan => {
      console.log(`- ${plan.name}: ${plan.price} kr/${plan.interval}`)
    })

    console.log('\n‚ú® Subscription plans setup complete!')

  } catch (error) {
    console.error('‚ùå Error setting up subscription plans:', error)
  } finally {
    await prisma.$disconnect()
  }
}

// Run if called directly
if (require.main === module) {
  setupSubscriptionPlans()
}

export { setupSubscriptionPlans } 